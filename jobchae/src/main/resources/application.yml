spring: # 주의할 점은 내용작성시 들여쓰기 내어쓰기시 공백개수를 반드시 꼭 지켜야 한다. 
  profiles: #실행환경(dev(개발),test(테스트),local(로컬),prod(운영))
    active: local 

  datasource-jobchae:
    driver-class-name: oracle.jdbc.OracleDriver
#    jdbcUrl: jdbc:oracle:thin:@dltnstls89.synology.me:1521:xe 원래 데이터베이스
#    jdbcUrl: jdbc:oracle:thin:@ec2-54-180-92-247.ap-northeast-2.compute.amazonaws.com:1521:xe #내 aws db
    jdbcUrl: jdbc:oracle:thin:@1.11.76.67:1521:xe #규영씨 db
    username: final_orauser
    password: gclass
    type: com.zaxxer.hikari.HikariDataSource
    hikari: #커넥션풀 
      connection-timeout : 30000 #클라이언트가 pool에 connection을 요청하는데 기다리는 최대시간을 설정 30초
      maximum-pool-size : 10 #최대 커넥션 개수 설정
      max-lifetime: 1800000  #커넥션 풀에서 살아있을 수 있는 커넥션의 최대 수명시간 1,800초(30분)

  #data:
    #mongodb:
      #uri: mongodb://devuser:qwer1234$@localhost:27017/mydb
      
  messages: #메시지(파일이 여러개일 경우 ,로 구분)
    basename: messages.validation
    encoding: UTF-8

  devtools: #View reload
    livereload:
      enabled: true

    restart: #컨트롤러, 모델단이 바뀌었을 때 프로젝트 재시작(reload) 설정 (정확히는 classpath에 있는 모든 파일)
      enabled: true #재시작(reload) 함

  servlet:
    multipart:
      max-file-size: 50MB     # 파일 업로드 용량제한 설정하기. 파일 업로드 용량을 설정하지 않으면 기본값은 1048576 bytes (1MB)으로 된다.
      max-request-size: 50MB  # 파일 및 파일을 제외한 input 태그값 업로드 용량제한 설정하기. 업로드 용량을 설정하지 않으면 기본값은 1048576 bytes (1MB)으로 된다.
  data:
    mongodb:
      uri: mongodb+srv://minjun9492:dkdkaks124!@leejunyoung.5kxrr.mongodb.net/jobchaeDB
  jpa:
    show-sql: true #실행한 쿼리를 콘솔에 출력
    properties:
      hibernate:
        format_sql: true #쿼리를 보기좋게 출력
  
  output: #VScode에서 로그 색상 설정
    ansi:
      enabled: always

mybatis: #mybatis 설정
  mapper-locations: mybatis/mapper/**/*.xml          #src/main/resources 아래 폴더속에 매퍼파일을 생성
logging: #로그 지정
  level:
    #root: error
    '[com.spring.board]': debug 
    #com.zaxxer.hikari.HikariConfig: DEBUG
    #com.zaxxer.hikari: TRACE
    org:
      hibernate:
        type:
          descriptor:
            sql: trace #sql문을 출력

server:
  port: 80
  servlet:
    context-path: /jobchae # context-path 를 /jobchae 로 설정
    encoding:
      charset: UTF-8
      enabled: true #http 인코딩 지원을 활성화할지 여부
      force: true #post 방식으로 전송했을때 한글데이터가 안깨지도록 함. # Spring Framework 에서는 web.xml 파일에서 filter 태그를 등록시켜 주었음.

springdoc:
  packages-to-scan: com.spring.app
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  cache:
    disabled: true              # 캐시 사용 여부
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
  swagger-ui:
    enabled: true               # Swagger UI 사용여부 : 접근 경로 => <http://localhost:8080/swagger-ui/index.html>
    path: /api                  # Swagger UI 추가 접근 경로 => <http://localhost:8080/api>
    tags-sorter: alpha          # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha    # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬